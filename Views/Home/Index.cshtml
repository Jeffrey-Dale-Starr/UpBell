@{
    ViewBag.Title = "UpBell";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <img src="~/images/upbell/upbell-header.png" />
    </div>
    <div class="row upbellRow">
        Select the csv or json file that contains the schedules you wish to upload.
    </div>
    <div class="row upbellRow">
        <form id="upload" enctype="multipart/form-data" action="@Url.Action("ProcessSchedules", "Home")" method="POST">
            <input type="file" placeholder="Select file..." name="fileSelect" id="fileSelect" accept=".csv, .json" />
        </form>
    </div>
    <div class="row upbellRow">
        <button class="btn btn-primary" onclick="ProcessSchedules();">Process Schedules</button>
    </div>
    <div class="row upbellRow">
        <pre id="content" style="border: none; white-space: pre-wrap; background: transparent;"></pre>
    </div>
    <div id="divMessage" class="row upbellRow message">
    </div>
    <div id="divErrorMessage" class="row upbellRow error-message">
    </div>
    <div class="row upbellRow">
        <button id="authorize_button" class="btn btn-success" style="display: none;">Authorize</button>
        <button id="signout_button" class="btn btn-secondary" style="display: none;">Sign Out</button>
    </div>
    <div>
        <pre style="border:none; background: transparent;" id="jsonOutput"></pre>
    </div>
</div>


<script type="text/javascript">
      var CLIENT_ID = '1042516209155-oralrtdo2cg0h1tt7lib4ip04j633ajg.apps.googleusercontent.com';
      var API_KEY = 'AIzaSyBK-3km2Pd-_n2d9bqvkikXJQRfHOnRykk';
      var DISCOVERY_DOCS = ["https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest"];
      var SCOPES = "https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events";

      var authorizeButton = document.getElementById('authorize_button');
      var signoutButton = document.getElementById('signout_button');

      function handleClientLoad() {
        gapi.load('client:auth2', initClient);
      }

      function initClient() {
        gapi.client.init({
          apiKey: API_KEY,
          clientId: CLIENT_ID,
          discoveryDocs: DISCOVERY_DOCS,
          scope: SCOPES
        }).then(function () {
          gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);
          updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());
          authorizeButton.onclick = handleAuthClick;
          signoutButton.onclick = handleSignoutClick;
        }, function(error) {
          appendPre(JSON.stringify(error, null, 2));
        });
      }

      function updateSigninStatus(isSignedIn) {
        if (isSignedIn) {
          authorizeButton.style.display = 'none';
          signoutButton.style.display = 'block';
        } else {
          authorizeButton.style.display = 'block';
          signoutButton.style.display = 'none';
        }
      }

      function handleAuthClick(event) {
        gapi.auth2.getAuthInstance().signIn();
      }

      function handleSignoutClick(event) {
        gapi.auth2.getAuthInstance().signOut();
      }

    function InsertEvent(eventToAdd) {
        console.log(eventToAdd);

        var request = gapi.client.calendar.events.insert({
          'calendarId': 'primary',
          'resource': eventToAdd
        });

        request.execute(function(event) {
          appendPre('Event created: ' + event.htmlLink);
        });
      }


      function appendPre(message) {
        var pre = document.getElementById('content');
        var textContent = document.createTextNode(message + '\n');
        pre.appendChild(textContent);
      }

    function ProcessSchedules() {
        var form = document.getElementById("upload");

        if (document.getElementById("fileSelect").files.length == 0) {
            SetMessage("You must select a csv or json file.", true);
        }
        else {

            $.ajax({
                url: form.action,
                type: form.method,
                data: new FormData(form),
                cache: false,
                contentType: false,
                processData: false,
                success: function (data) {
                    console.log(data);
                    for (var x = 0; x < data.Events.length; x++) {
                        InsertEvent(data.Events[x]);
                    }

                    SetMessage("Successfully added " + data.Events.length + " new calendar events!", false);
                },
                error: function (xhr, error, status) {
                    console.log(error, status);
                    SetMessage(error.message, true);
                }
            });
        }
    }


    function SetMessage(msg, isError) {
        var divMessage = document.getElementById("divMessage");
        var divErrorMessage = document.getElementById("divErrorMessage");

        if (isError) {
            divMessage.innerHTML = "";
            divErrorMessage.innerHTML = msg;
        } else {
            divMessage.innerHTML = msg;
            divErrorMessage.innerHTML = "";
        }
    }

</script>

<script async defer src="https://apis.google.com/js/api.js"
        onload="this.onload=function(){};handleClientLoad()"
        onreadystatechange="if (this.readyState === 'complete') this.onload()">
</script>
